plugins {
  id 'com.diffplug.spotless'
}

eclipse.classpath.file {
  // instruct eclipse plugin to put everything to module path
  whenMerged {
    entries.findAll { it.kind == 'lib' }.each { it.entryAttributes['module'] = 'true' }
  }
}

dependencies {
  implementation project(':jrosmoveit')
  implementation 'io.github.pinorobotics:jrosrviztools:2.0-SNAPSHOT'
  implementation 'io.github.pinorobotics:jrostf2:3.0-SNAPSHOT'

  def junitVersion = "5.8.1"
  implementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
  implementation "org.junit.jupiter:junit-jupiter-params:${junitVersion}"
  runtimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
  runtimeOnly "org.junit.platform:junit-platform-commons:1.7.0"
}

compileTestJava {
    doFirst {
        options.compilerArgs = [
            '--module-path', classpath.asPath
        ]
        classpath = files()
    }
}

// run spotless and format code before the build
testClasses.dependsOn spotlessApply

if (project.hasProperty('publish')) {

  apply plugin: 'maven-publish'

  publishing {
    publications {
      mavenJava(MavenPublication) {
        artifactId = 'jrosmoveit.tests'
        groupId = 'io.github.pinorobotics'
        from components.java
        pom {
          name = 'jrosmoveit'
          description = 'jrosmoveit.tests'
          url = 'http://pinoweb.freetzi.com/jrosmoveit'

          licenses {
            license {
              name = 'The Apache License, Version 2.0'
              url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            }
          }

          developers {
            developer {
              id = 'aeon'
              email = 'aeon_flux@eclipso.ch'
            }
          }

          scm {
            url = 'https://github.com/pinorobotics/jrosmoveit'
          }
        }
      }
    }   
  }
}
