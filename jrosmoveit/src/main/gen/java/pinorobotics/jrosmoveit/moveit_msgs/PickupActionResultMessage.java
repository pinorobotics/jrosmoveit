/*
 * Copyright 2021 jrosmoveit project
 * 
 * Website: https://github.com/pinorobotics/jrosmoveit
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package pinorobotics.jrosmoveit.moveit_msgs;

import id.jros1messages.std_msgs.HeaderMessage;
import id.jrosmessages.Message;
import id.jrosmessages.MessageMetadata;
import id.xfunction.XJson;
import java.util.Objects;
import pinorobotics.jros1actionlib.actionlib_msgs.GoalStatusMessage;

/**
 * Definition for moveit_msgs/PickupActionResult ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION
 * DEFINITION ======
 */
@MessageMetadata(name = PickupActionResultMessage.NAME, md5sum = "ab5e95d613f663fb48a9a67ea74b07c3")
public class PickupActionResultMessage implements Message {

    static final String NAME = "moveit_msgs/PickupActionResult";

    public HeaderMessage header = new HeaderMessage();

    public GoalStatusMessage status = new GoalStatusMessage();

    public PickupResultMessage result = new PickupResultMessage();

    public PickupActionResultMessage withHeader(HeaderMessage header) {
        this.header = header;
        return this;
    }

    public PickupActionResultMessage withStatus(GoalStatusMessage status) {
        this.status = status;
        return this;
    }

    public PickupActionResultMessage withResult(PickupResultMessage result) {
        this.result = result;
        return this;
    }

    @Override
    public int hashCode() {
        return Objects.hash(header, status, result);
    }

    @Override
    public boolean equals(Object obj) {
        var other = (PickupActionResultMessage) obj;
        return Objects.equals(header, other.header)
                && Objects.equals(status, other.status)
                && Objects.equals(result, other.result);
    }

    @Override
    public String toString() {
        return XJson.asString(
                "header", header,
                "status", status,
                "result", result);
    }
}
