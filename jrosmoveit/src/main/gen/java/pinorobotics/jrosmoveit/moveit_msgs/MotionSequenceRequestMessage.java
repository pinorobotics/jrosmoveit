/*
 * Copyright 2021 msgmonster project
 * 
 * Website: https://github.com/pinorobotics/msgmonster
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * msgmonster autogenerated Message class for jrosclient
 * 
 * Generated for ROS msg file: moveit_msgs/MotionSequenceRequest
 */

package pinorobotics.jrosmoveit.moveit_msgs;

import java.util.Objects;

import id.jrosmessages.Message;
import id.jrosmessages.MessageMetadata;
import id.kineticstreamer.annotations.Streamed;
import id.xfunction.XJson;

import java.util.Arrays;

/**
 * Definition for moveit_msgs/MotionSequenceRequest
 */
@MessageMetadata(
    type = MotionSequenceRequestMessage.NAME,
    md5sum = "d6e6d4da3bede363f50e4ffbac7629a0")
public class MotionSequenceRequestMessage implements Message {
   
   static final String NAME = "moveit_msgs/MotionSequenceRequest";

   /**
    * List of motion planning request with a blend_radius for each.
    * In the response of the planner all of these will be executable as one sequence.
    */
   @Streamed
   public MotionSequenceItemMessage[] items = new MotionSequenceItemMessage[0];
   
   public MotionSequenceRequestMessage withItems(MotionSequenceItemMessage... items) {
       this.items = items;
       return this;
   }
   
   @Override
   public int hashCode() {
       return Objects.hash(
           Arrays.hashCode(items)
       );
   }
   
   @Override
   public boolean equals(Object obj) {
       var other = (MotionSequenceRequestMessage) obj;
       return
           Arrays.equals(items, other.items)
       ;
   }
   
   @Override
   public String toString() {
       return XJson.asString(
           "items", items
       );
   }
   
}
